{"ast":null,"code":"import { Observable, Subscription } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nvar HomeComponent = /** @class */function () {\n  function HomeComponent() {}\n  HomeComponent.prototype.ngOnInit = function () {\n    // this.firstObsSubscription = interval(1000).subscribe(count => {\n    //   console.log(count)\n    // })\n    var customIntervalObservable = Observable.create(function (observer) {\n      var count = 0;\n      setInterval(function () {\n        observer.next(count);\n        if (count == 2) {\n          observer.complete();\n        }\n        ;\n        if (count > 3) {\n          observer.error(new Error('Count is greater 3!'));\n        }\n        count++;\n      }, 1000);\n    });\n    this.firstObsSubscription = customIntervalObservable.pipe(filter(function (data) {\n      return;\n    })), map(function (data) {\n      return 'Round: ' + (data + 1);\n    }).subscribe(function (data) {\n      console.log(data);\n    }, function (error) {\n      console.log(error);\n      alert(error.message);\n    }, function () {\n      console.log('Completed!');\n    });\n  };\n  HomeComponent.prototype.ngOnDestroy = function () {\n    this.firstObsSubscription.unsubscribe();\n  };\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 2,\n    vars: 0,\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Yay, I'm home!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return HomeComponent;\n}();\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}